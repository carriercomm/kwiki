package Kwiki::Config;
use Spoon::Config -Base;
use mixin 'Kwiki::Installer';

const class_id => 'config';
const class_title => 'Kwiki Configuration';
field script_name => '';

sub add_plugins_file {
    my $plugins_file = shift;
    return unless -f $plugins_file;
    $self->add_config(
        {
            plugin_classes => [ $self->read_plugins($plugins_file) ],
        }
    );
}

sub read_plugins {
    my $plugins_file = io(shift);
    my @plugins = grep {
        s/^([\+\-]?[\w\:]+)\s*$/$1/;
    } $plugins_file->slurp;
    return @plugins unless grep /^[\+\-]/, @plugins or not @plugins;
    my $filename = $plugins_file->filename;
    die "Can't create plugins list"
      unless -e "../$filename";
    my $updir = io->updir->chdir;
    my @parent_plugins = $self->read_plugins($filename);
    for (@plugins) {
        my $remove = $_;
        $remove =~ s/^\-// or next;
        @parent_plugins = grep {$_ ne $remove} @parent_plugins;
    }
    my %have;
    @have{@parent_plugins} = ('1') x @parent_plugins;
    return @parent_plugins, grep {
        not /^\-/ and do {
            s/^\+//;
            not $have{$_};
        }
    } @plugins;
}

sub add_plugin {
    push @{$self->plugin_classes}, shift;
}

sub change_plugin {
    my ($new_class, $old_class) = @_;
    my $pattern = $old_class || do {
        my $temp = $new_class;
        $temp =~ s/^\w+:://;
        '\w+::' . $temp;
    };
    my $plugins = $self->plugin_classes;
    for (@$plugins) {
        last if s/$pattern/$new_class/;
    }
}

sub add_file {
    my $file = shift;
    my $config_path = $self->hub->paths->lookup_path('config');
    for my $dir (@$config_path) {
        my $filepath = "$dir/$file";
        $self->add_filepath($filepath)
          if -f $filepath;
    }
}

sub add_filepath {
    my $filepath = shift;
    my $hash = $self->hash_from_file($filepath);
    for my $key (keys %$hash) {
        $self->add_field($key, $hash->{$key});
    }
}

sub get_packed_files {
    my @return;
    my @packed = $self->SUPER::get_packed_files(@_);
    while (my ($name, $content) = splice(@packed, 0, 2)) {
        if ($name =~ /^(plugins|config\.yaml)$/) {
            next if -f $name;
        }
        push @return, $name, $content;
    }
    @return;
}

__DATA__


__config/config.yaml__
# DO NOT EDIT THIS FILE
# Put overrides in the top level config.yaml
# See: http://www.kwiki.org/?ChangingConfigDotYaml
#
site_title: Kwiki
main_page: HomePage
database_directory: database
logo_image: palm90.png
favicon: palm32.png
script_name: index.cgi
__!config.yaml__
# Put all local overrides/modifications to the config/* files in this
# file. Do not modify any of the files under the config/ directory as
# they will be overwritten by subsequent upgrades to Kwiki modules.
# See: http://www.kwiki.org/?ChangingConfigDotYaml
#
logo_image: palm90.png
favicon: palm32.png
__!plugins__
# This is a list of all the plugins your Kwiki is currently set up to
# use. Modify this list to suit your needs. After modification, run
# 'kwiki -update' to make the changes live. Alternately use 
# 'kwiki -add ...', 'kwiki -remove ...', and 'kwiki -install ...' to
# manage this list for you.

# See http://www.kwiki.org/InstallingPlugins for more information.

# These are the bare bones plugins necessary for an editable Kwiki:
Kwiki::Display
Kwiki::Edit
Kwiki::Theme::Basic
Kwiki::Toolbar
Kwiki::Status
Kwiki::Widgets

# These are very common plugins. You'll need to install them (as
# separate CPAN modules) first.
# Kwiki::RecentChanges
# Kwiki::Archive::Rcs
# Kwiki::Revisions
# Kwiki::UserPreferences
# Kwiki::UserName
# Kwiki::Search
# Kwiki::Icons::Gnome
# Kwiki::TimeZone
# Kwiki::NewPage
# Kwiki::BreadCrumbs

# Theme plugins:
# Kwiki::Theme::Basic
# Kwiki::Theme::Klassik
# Kwiki::Theme::ColumnLayout
# Kwiki::Theme::HLB
# Kwiki::Theme::TabNav
# Kwiki::Theme::Sonia
# Kwiki::Theme::Aqua

# Icon Set plugins:
# Kwiki::Icons::Gnome
# Kwiki::Icons::Crystal

# Archive plugins:
# Kwiki::Archive::Rcs
# Kwiki::Archive::SVK
# Kwiki::Archive::Cvs

# WARNING: THIS FOLOWING SECTION OF PLUGINS SHOULD NOT BE MADE AVAILABLE
# TO A PUBLICLY ACCESSABLE SITE! They offer capabilities which only the
# site administrator should have access to. Install these plugins in a
# password protected view of your kwiki. See
# http://www.kwiki.org/AdminView for more information.
#
# Site Administrator plugins:
# Kwiki::DeletePage
# Kwiki::PageInfo
# Kwiki::PagePrivacy

# Anti WikiSpam plugins:
# Kwiki::ExternalLinkWhitelist
# Kwiki::AccessBlacklist
# Kwiki::Scode

# WAFL Syntax Extension plugins:
# Kwiki::Comments
# Kwiki::ConfigBlocks
# Kwiki::DMOZLink
# Kwiki::GoogleLink
# Kwiki::IRCMode
# Kwiki::Image
# Kwiki::ParagraphBlocks
# Kwiki::PerlTidyBlocks
# Kwiki::PerlTidyModule
# Kwiki::PodBlocks
# Kwiki::PreformattedBlocks
# Kwiki::ShellBlocks
# Kwiki::ShortcutLinks
# Kwiki::VimMode

# Other plugins:
# Kwiki::Atom
# Kwiki::AuthorOnlyPageEditing
# Kwiki::Autoformat
# Kwiki::Diff
# Kwiki::Edit::RequireUserName
# Kwiki::Edit::SubEtha
# Kwiki::Email
# Kwiki::Favorites
# Kwiki::GDGraphGenerator
# Kwiki::GuestBook
# Kwiki::HanConvert
# Kwiki::Infobox
# Kwiki::LiveSearch
# Kwiki::MindMap
# Kwiki::Notify::IRC
# Kwiki::Notify::Mail
# Kwiki::Outline2Html
# Kwiki::PageInclude
# Kwiki::PagePrivacy
# Kwiki::PageTemplate
# Kwiki::Pages::Perldoc
# Kwiki::RecentChanges::Atom
# Kwiki::RecentChangesRSS
# Kwiki::ReferrerLog
# Kwiki::SocialMap
# Kwiki::Spork
# Kwiki::Toolbar::List
# Kwiki::Users::Remote
# Kwiki::Weather
# Kwiki::Zipcode
